*** DebrisDefragmentation\DebrisDefragmentation\Resources 를 실행 파일이 있는 폴더에 복사해주세요.
*** JSON dll 폴더의 System.Net.Json.dll 파일을 GameTool 실행 파일이 있는 곳에 올려주세요.

*** 조작법
	앞으로 이동 	: w
	정지		: s
	카메라 회전	: 마우스 이동
	
	캐릭터 방향 카메라 방향으로 회전 : space
	
	*** 공통 스킬 ***
	다른 캐릭터 밀기	: 1
	ISS module 점령		: 2
	ISS module 부수기	: 4
	구조물 설치 		: 추진제 나눔

	*** 클래스 전환 ***
	striker			: F5
	protector		: F6
	engineer		: F7

	*** 특수 스킬 ***
	striker
		다른 캐릭터 당기기 	: F1
		space mine 설치		: F2
		순간 가속		: F3

	protector
		재난 경보 		: F1
		산소 나눔		: F2
		EMP 사용		: F3
	
	engineer
		데브리 채취		: F1
		dispenser 설치		: F2
		( 미구현 )		: F3


2014. 6. 3

>>> Tool


>>> framework
	

>>> logic & physics
	striker class 순간 가속 스킬 사용 시 2의 제곱으로 속도가 늘어나던 버그 수정
	dispenser 효과 적용 시 산소량과 추진제량 무한대로 증가하는 버그 수정
	ISS 관련 스킬 로직 ISS 내부로 이동	
	캐릭터 클래스 전환 기능 추가


>>> client
	dispenser와 space mine 설치 시 시각적으로 확인할 수 있도록 수정
	서버 디버깅 정보 표시 기능 추가 ( F12 )
	게임 내 오브젝트 - dispenser & space mine - 을 관리하는 objectManager 기능 구현
	구글 breakpad붙임.
	shader 적용부분 구현
	빌보드 클래스 생성
	
>>> server
	Log4cplus 추가
	스킬 사용 후 결과 패킷 방송하는 함수를 전송되는 패킷 종류에 따라서 분리
	서버 내 디버깅 정보( 채널 정보 및 각 캐릭터 정보 ) 전송




2014. 5. 20

>>> Tool
	DirectX Renderer 버그 수정
	JSON 파일을 읽어와서 TreeView로 보여주고 값을 수정할 수 있음


>>> framework
	

>>> logic & physics
	cooldown time system 추가
	ISS 충돌 시 반사 벡터 방향이 부자연스럽던 문제 수정
	ISS 점령 포인트 생성
	게임 내 재난 이벤트 기능 추가
	3가지 캐릭터 클래스 및 특수 스킬 구현
	ISS가 actor를 상속받던 부분 수정 (현재는 사실상 manager 성격의 클래스)
	Engineer Class Dispenser 설치 스킬 추가.
	
>>> client
	Model loading 시 instacing 적용 ( 파일 로딩 관련)
	Engineer Class Dispenser 설치 관련 모델 및 클래스 추가
	push pull packet관련 버그 수정
	
>>> server
	클라이언트가 접속을 끊으면 로직 관련 자원 반환하는 과정에서 assert에 걸리던 버그 수정
	clientManager와 Logic 부분 최대한 분리
	packet process 하는 부분에서 로직도 처리하던 것을 로직 관련 객체(classComponent 등) 내부로 이동
	



2014. 5. 13

>>> Tool


>>> framework
	프레임웍 내부 오브젝트가 가지고 있던 3차원 변환관련 데이터 로직으로 이동

>>> logic & physics
	게임 승리 조건 판정
	추진제 나누는 스킬 구현
	팀 구분 및 배정 기능 추가
	
>>> client
	프레임웍과 로직 구조 변경 적용
	
>>> server
	한 업데이트 단계에서 확인된 모든 결과를 방송 못 하던 버그 수정
	캐릭터 죽음 판정 처리
	모든 유저가 접속 종료하면 게임 상태 초기화
	확인이 필요한 사용자에서 보낸 데이터 유효성 검사
	


2014. 5. 6

>>> Tool

>>> framework

>>> logic & physics
	캐릭터 죽음 판정 및 리스폰 기능 추가
	충돌박스 복사대입생성 삭제 - 포인터를 이용해서 연산하도록 변경
	ISS를 부분(모듈)로 나누어서 충돌체크하는 기능 추가
	ISS 점령 및 파괴 기능 추가

>>> client
	카메라와 캐릭터 부모-자식 관계 완전히 분리
	기존에 카메라-캐릭터 방향 동기화하는 과정에서 방향이 조금씩 어긋나던 버그 수정
	디버깅용 충돌 박스 화면에 표시
	서버와 동기화 차이나는 부분을 확인할 수 있도록 서버로부터 받은 위치를 표시하는 고스트 바운딩 박스 생성
	로직의 ISS 관련 추가된 부분 반영
	alpha값을 가진 객체들 별도로 정렬해서 렌더하는 기능 추가
	
>>> server
	SyncAll() 함수 사용 금지 - 현재는 디버깅(서버와 클라 사이의 차이 확인) 용도로만 사용 중
	이벤트 발생 시점을 기준으로 서버 - 클라 동기화하도록 변경
	패킷을 방송하지 않고 특정 세션에만 직접 전달하는 기능 추가 - ClientList를 unordered_map으로 변경
	기존에 있던 각 세션이 다른 세션의 캐릭터를 바꿀 수 있는 가능성 배제
	로직의 ISS 관련 추가된 부분 반영



2014. 4. 29

*** DebrisDefragmentation\DebrisDefragmentation\Resources 를 실행 파일이 있는 폴더에 복사해주세요.
*** JSON dll 폴더의 System.Net.Json.dll 파일을 GameTool 실행 파일이 있는 곳에 올려주세요.

>>> Tool

	

>>> framework
	UI클래스 추가


>>> logic & physics
	플레이어가 스킬 사용 시 타겟 검출 로직 구현
	플레이어 사이에 밀고 당기는 스킬 구현
	충돌 시 그냥 반대 방향으로만 밀어내던 충돌 구현을 두 물체의 운동 상태, 질량을 고려해서 바뀌도록 수정 (현재 탄성 충돌)
	각 객체 spin 로직 구현(현재 스킬 사용시 적용)

>>> client
	게임의 중심이 되는 ISS방향으로 향하는 compass UI 구현 - compass를 따라가면 ISS를 만날 수 있습니다
	카메라의 회전과 캐릭터의 회전을 분리 - 카메라는 캐릭터와 독립적으로 회전하고 space키 입력으로 캐릭터의 방향을 카메라 방향으로 동기화	
	

>>> server
	ActorManager를 통해 충돌, 타겟 검출 로직 적용



2014. 4. 22

*** DebrisDefragmentation\DebrisDefragmentation\Resources 를 실행 파일이 있는 폴더에 복사해주세요.
*** JSON dll 폴더의 System.Net.Json.dll 파일을 GameTool 실행 파일이 있는 곳에 올려주세요.

>>> Tool
	탭 UI를 부착해서 공간 문제를 해결함
	JSON Read 기능 추가
	

>>> framework
	네트워크 처리 방식을 기존에 프레임웍에서 패킷을 분석하던 것에서 어플리케이션에서 하도록 수정


>>> client
	Logic 분리
	

>>> server
	게임 로직에 관련된 부분 새 프로젝트로 분리
	OOB 충돌체크 로직 구현 - 아직 적용안 안 된 상태(데모까지 적용 예정)
	게임로직을 통해 모든 처리를 하던 구조에서 개별 객체 안으로 로직 분리 진행
		>>> 현재 매니저 분리 중(데모까지 완성 예정)





2014. 4. 15

*** DebrisDefragmentation\DebrisDefragmentation\Resources 를 실행 파일이 있는 폴더에 복사해주세요.

>>> Tool
	D3D 오브젝트 표시 가능 
	카메라 조작 기능 추가
	

>>> framework
	큰 변동 사항 없음 


>>> client
	큰 변동 사항 없음
	

>>> server
	패킷 디자인
	서버 기반 코드 작성
	서버 내 간단한 게임 로직 구현 (플레이어 움직임 계산)




2014. 4. 8 

*** DebrisDefragmentation\DebrisDefragmentation\Resources 를 실행 파일이 있는 폴더에 복사해주세요.

>>> Tool
	tool에서 D3D 화면 렌더링
	프레임웍 연동

>>> framework
	D3D에 기반한 presentation 기능 구현
	가속도에 의한 속도 및 위치 변화 계산 구현


>>> client
	사용자 캐릭터의 위치와 방향에 기반한 카메라 시점 구현
	마우스 인풋에 따라서 카메라 시점 변화 적용
	기본적인 물리 파라미터를 생성한 캐릭터 생성
	시점 변화를 확인할 수 있는 데브리 객체 생성

>>> server
