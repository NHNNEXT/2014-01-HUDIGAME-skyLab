2014. 4. 29

*** DebrisDefragmentation\DebrisDefragmentation\Resources 를 실행 파일이 있는 폴더에 복사해주세요.
*** JSON dll 폴더의 System.Net.Json.dll 파일을 GameTool 실행 파일이 있는 곳에 올려주세요.

>>> Tool
	탭 UI를 부착해서 공간 문제를 해결함
	JSON Read 기능 추가
	

>>> framework
	UI클래스 추가


>>> logic & physics
	플레이어가 스킬 사용 시 타겟 검출 로직 구현
	플레이어 사이에 밀고 당기는 스킬 구현
	충돌 시 그냥 반대 방향으로만 밀어내던 충돌 구현을 두 물체의 운동 상태, 질량을 고려해서 바뀌도록 수정 (현재 탄성 충돌)
	각 객체 spin 로직 구현(현재 스킬 사용시 적용)

>>> client
	게임의 중심이 되는 ISS방향으로 향하는 compass UI 구현 - compass를 따라가면 ISS를 만날 수 있습니다
	카메라의 회전과 캐릭터의 회전을 분리 - 카메라는 캐릭터와 독립적으로 회전하고 space키 입력으로 캐릭터의 방향을 카메라 방향으로 동기화	
	

>>> server
	ActorManager를 통해 충돌, 타겟 검출 로직 적용



2014. 4. 22

*** DebrisDefragmentation\DebrisDefragmentation\Resources 를 실행 파일이 있는 폴더에 복사해주세요.
*** JSON dll 폴더의 System.Net.Json.dll 파일을 GameTool 실행 파일이 있는 곳에 올려주세요.

>>> Tool
	탭 UI를 부착해서 공간 문제를 해결함
	JSON Read 기능 추가
	

>>> framework
	네트워크 처리 방식을 기존에 프레임웍에서 패킷을 분석하던 것에서 어플리케이션에서 하도록 수정


>>> client
	Logic 분리
	

>>> server
	게임 로직에 관련된 부분 새 프로젝트로 분리
	OOB 충돌체크 로직 구현 - 아직 적용안 안 된 상태(데모까지 적용 예정)
	게임로직을 통해 모든 처리를 하던 구조에서 개별 객체 안으로 로직 분리 진행
		>>> 현재 매니저 분리 중(데모까지 완성 예정)





2014. 4. 15

*** DebrisDefragmentation\DebrisDefragmentation\Resources 를 실행 파일이 있는 폴더에 복사해주세요.

>>> Tool
	D3D 오브젝트 표시 가능 
	카메라 조작 기능 추가
	

>>> framework
	큰 변동 사항 없음 


>>> client
	큰 변동 사항 없음
	

>>> server
	패킷 디자인
	서버 기반 코드 작성
	서버 내 간단한 게임 로직 구현 (플레이어 움직임 계산)




2014. 4. 8 

*** DebrisDefragmentation\DebrisDefragmentation\Resources 를 실행 파일이 있는 폴더에 복사해주세요.

>>> Tool
	tool에서 D3D 화면 렌더링
	프레임웍 연동

>>> framework
	D3D에 기반한 presentation 기능 구현
	가속도에 의한 속도 및 위치 변화 계산 구현


>>> client
	사용자 캐릭터의 위치와 방향에 기반한 카메라 시점 구현
	마우스 인풋에 따라서 카메라 시점 변화 적용
	기본적인 물리 파라미터를 생성한 캐릭터 생성
	시점 변화를 확인할 수 있는 데브리 객체 생성

>>> server
